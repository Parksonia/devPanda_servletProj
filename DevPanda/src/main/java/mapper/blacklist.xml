<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.blacklist">
	<!-- auctionNum으로 transaction 테이블에서 buyerId, sellerId, transactionNum, bidNum을 
		가져오는 쿼리 -->
	<select id="getComAuctionDetailsByAuctionNum"
		parameterType="int" resultType="Map">
		SELECT buyerId, sellerId,
		transactionNum, bidNum
		FROM transaction
		WHERE auctionNum = #{auctionNum}
	</select>

	<!-- Blacklist 테이블에 신고 정보를 추가하는 쿼리 -->
	<insert id="addToComBlacklist" parameterType="Map">
		INSERT INTO
		blacklist (declCom, blackPerson, transactionNum, bidNum, title,
		content, reportDate, roleType)
		VALUES (#{declCom}, #{blackPerson},
		#{transactionNum}, #{bidNum}, #{title},
		#{content}, NOW(), 'B')
	</insert>

	<!-- Blacklist 리스트 띄우기 위해 필요한 정보 가져오기 -->
	<select id="getComBlackListByBlackNum" parameterType="Map"
		resultType="Map">
		select bl.blackPerson as blackPerson, a.title as title, t.date as tdate, bl.reportDate as rdate, t.transactionNum as tnum
		from blacklist as bl
		join transaction t ON t.transactionNum = bl.transactionNum
		join auction a ON t.auctionNum = a.auctionNum
		where bl.declCom = #{blackNum}
	</select>
	
	<!-- 개인(구매자)의 Seller에 대한 Blacklist 페이징 처리 위한 총 카운트 -->
	<select id="selectBuyerPersontSellerBlackListCnt" parameterType="String" resultType="Integer">
	 	<![CDATA[
	 	SELECT COUNT(*) FROM blacklist WHERE declPerson = #{id} AND LOWER(roleType) ='b';
	 	]]>
	</select>
	<!-- ////////////////////////////////////////////////////// -->
	
	<!-- 개인(구매자)의 Seller에 대한 Blacklist 리스트 띄우기 위해 필요한 정보 가져오기 -->
	<select id="selectAllSellerBlackOfPersonBuyer" parameterType="MAP" resultType="MAP">
		<![CDATA[
		SELECT b.*,
	 	t.date AS tansationDate,
		a.title AS auctionTitle,
		p.personImage,
		p.email
		FROM blacklist b JOIN transaction t
		ON. b.transactionNum = t.transactionNum
		JOIN auction a ON t.auctionNum = a.auctionNum
		JOIN person p ON t.sellerId = p.id
		WHERE b.declPerson=#{id} AND LOWER(roleType) ='b'
		ORDER BY b.reportDate DESC LIMIT #{row},10;
		]]>
	</select>
	<!-- 개인(구매자)의 Seller에 대한 Blacklist 삭제 -->
	
	<delete id="deleteSellerBlackForBuyerPerson" parameterType="Integer" >
		DELETE FROM blacklist WHERE blackNum=#{blackNum};
	</delete>
	<!-- /////////////////////////////////////////////////////////////// -->
		
	
	
	
	<insert id="insertBuyerPersonBlack" parameterType="map">
		<![CDATA[
			INSERT INTO blacklist 
			(declPerson, transactionNum, bidNum, blackPerson, title, content, reportDate, roleType)
			VALUES 
			(#{declPerson}, #{transactionNum}, #{bidNum}, #{blackPerson}, #{title}, #{content}, DATE_FORMAT(NOW(), '%Y-%m-%d'), 'S');
		]]>
	</insert>
	
	<insert id="insertBuyerComBlack" parameterType="map">
		<![CDATA[
			INSERT INTO blacklist 
			(declPerson, transactionNum, bidNum, blackCom, title, content, reportDate, roleType)
			VALUES 
			(#{declPerson}, #{transactionNum}, #{bidNum}, #{blackCom}, #{title}, #{content}, DATE_FORMAT(NOW(), '%Y-%m-%d'), 'S');
		]]>
	</insert>
	
	<insert id="insertSellerBlack" parameterType="map">
		<![CDATA[
			INSERT INTO blacklist 
			(declPerson, transactionNum, bidNum, blackPerson, title, content, reportDate, roleType)
			VALUES 
			(#{declPerson}, #{transactionNum}, #{bidNum}, #{blackPerson}, #{title}, #{content}, DATE_FORMAT(NOW(), '%Y-%m-%d'), 'B');
		]]>
	</insert>
	
	<select id="selectBlacklistById" parameterType="map" resultType="map">
		<![CDATA[
			select b.*, p.personImage, c.companyImage, t.date
			from blacklist b 
			left outer join person p
				on b.blackPerson = p.id
			LEFT OUTER JOIN company c
				ON b.blackCom = c.id
			JOIN transaction t
				ON b.transactionNum = t.transactionNum
			where declPerson=#{id}
			limit #{limit} offset #{offset};
		]]>
	</select>
	
	<select id="countBlacklistById" parameterType="String" resultType="int">
		<![CDATA[
			select count(*) from blacklist where declPerson=#{id};
		]]>
	</select>
	
	<delete id="deleteBlacklistByNum" parameterType="Integer">
		<![CDATA[
			DELETE FROM blacklist WHERE blackNum = #{blackNum};
		]]>
	</delete>


</mapper>

