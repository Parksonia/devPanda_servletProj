<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.auction">

	<insert id="insertAuction" parameterType="dto.Auction">
    INSERT INTO auction
    (title, minSalary, maxSalary, occupation, period,
    education, employmentType, stack, certification, location, portfolio, startDate, endDate, state, startPrice, bidMaxPrice,id)
    VALUES
    (#{title}, #{minSalary}, #{maxSalary}, #{occupation},
    #{period}, #{education}, #{employmentType}, #{stack},
    #{certification}, #{location}, #{portfolio}, #{startDate}, #{endDate}, #{state}, #{startPrice}, #{bidMaxPrice},#{id});
	</insert>




	<select id="getAuctionsWithPersonInfo" parameterType="map"
		resultType="map">
		SELECT
		a.auctionNum,
		a.title,
		a.minSalary,
		a.maxSalary,
		p.personImage,
		p.nickName
		FROM auction a
		JOIN person p ON a.id = p.id
		LIMIT #{pageSize} OFFSET #{offset}
	</select>
	
	<select id="findAuctionById" parameterType="int" resultType="dto.AuctionAndPerson">
		select a.*,
		p.nickname,p.email,p.address,p.sex,p.age,p.personimage,p.status 
		from auction as a inner join person as p on a.id = p.id
		where auctionNum=#{auctionNum}
	</select>

	<resultMap id="auctionPersonMap" type="map">
		<result column="auctionNum" property="auctionNum" />
		<result column="title" property="title" />
		<result column="minSalary" property="minSalary" />
		<result column="maxSalary" property="maxSalary" />
		<result column="personImage" property="personImage" />
		<result column="nickName" property="nickName" />
		<!-- 필요한 추가 컬럼 매핑 -->
	</resultMap>



	<!--경매등록식별자로 경매등록내용 조회 -->
	<select id="selectOneAuction" parameterType="Integer"
		resultType="auction">
	<![CDATA[
		SELECT * FROM auction WHERE auctionNum = #{auctionNum};
	]]>
	</select>
	
	
	<!-- offset limit 이용 경매 리스트 조회 -->
	<select id="findAllAuctionWithOffset" parameterType="int"
		resultType="dto.AuctionAndPerson">
		select a.*,
		p.nickname,p.email,p.address,p.sex,p.age,p.personimage,p.status 
		from auction as a inner join person as p on a.id = p.id
		order by a.auctionNum
		limit 9 offset #{offset}
		
	</select>
	
	
		<update id="updateAuction" parameterType="auction">
	
		update auction set bidMaxPrice=#{bidMaxPrice}
		where auctionNum=#{auctionNum}
	
	
	</update>
	
	<select id="selectPSAuctionList" parameterType="Map" resultType="Map">
		<![CDATA[
			select a.* , p.*
				from auction a
				JOIN person p ON a.id = p.id
				WHERE a.id = #{sellerId}
		]]>
		
		<if test="filterDate != null and filterDate != ''">
			<![CDATA[
				and STR_TO_DATE(a.endDate, '%Y-%m-%d') between STR_TO_DATE(#{filterDate}, '%Y-%m-%d') and STR_TO_DATE(now(), '%Y-%m-%d')
			]]>
		</if>
		
		<if test="startDate != null and startDate !='' and endDate != null and endDate !=''">
			<![CDATA[
				and STR_TO_DATE(a.endDate, '%Y-%m-%d') between STR_TO_DATE(#{startDate}, '%Y-%m-%d') and STR_TO_DATE(#{endDate}, '%Y-%m-%d')
			]]>
		</if>
		<![CDATA[
			ORDER BY 
				case
					when a.state = 'processing' then 1
					when a.state = 'unprocessing' then 2
					ELSE 3
				END,
			a.endDate DESC
			limit #{limit} offset #{offset};
		]]>
	</select>
	
	<select id="countPSAuctionListBySellerId" parameterType="String" resultType="int">
		<![CDATA[
			select count(*) from auction where id=#{id};
		]]>
	</select>
	
	
	<select id="selectPSAuctionListByDate" parameterType="map" resultType="Map">
		<![CDATA[
			select a.* , p.*
				from auction a
				JOIN person p ON a.id = p.id
				WHERE a.id = #{sellerId}
				and STR_TO_DATE(a.endDate, '%Y-%m-%d') between STR_TO_DATE(#{filterDate}, '%Y-%m-%d') and STR_TO_DATE(now(), '%Y-%m-%d')
				ORDER BY 
					case
						when a.state = 'processing' then 1
						when a.state = 'unprocessing' then 2
						ELSE 3
					END,
				a.endDate DESC
				limit #{limit} offset #{offset};
		]]>
	</select>
	
	<select id="selectPSAuctionListByDateRange" parameterType="map" resultType="Map">
		<![CDATA[
			select a.*, p.*
				from auction a
				join person p
				on a.id = p.id
				where a.id=#{sellerId}
				and STR_TO_DATE(a.endDate, '%Y-%m-%d') between STR_TO_DATE(#{startDate}, '%Y-%m-%d') and STR_TO_DATE(#{endDate}, '%Y-%m-%d')
				ORDER BY 
					case
						when a.state = 'processing' then 1
						when a.state = 'unprocessing' then 2
						ELSE 3
					END,
			a.endDate DESC
			limit #{limit} offset #{offset};
		]]>
	</select>

</mapper>
